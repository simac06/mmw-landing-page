---
const { links } = Astro.props;
import { Icon } from "astro-icon/components";

const musicPlatforms = [
  {
    platform: "Spotify",
    icon: "fa-brands:spotify",
    url: links.spotify,
  },
  {
    platform: "Apple Music",
    icon: "fa-brands:apple",
    url: links.appleMusic,
  },
  {
    platform: "Youtube Music",
    icon: "fa-brands:youtube",
    url: links.youtubeMusic,
  },
  {
    platform: "Deezer",
    icon: "fa-brands:deezer",
    url: links.deezer,
  },
  {
    platform: "SoundCloud",
    icon: "fa-brands:soundcloud",
    url: links.soundCloud,
  },
  {
    platform: "Tidal",
    icon: "simple-icons:tidal",
    url: links.tidal,
  },
  {
    platform: "Amazon Music",
    icon: "simple-icons:amazonmusic",
    url: links.amazonMusic,
  },
  {
    platform: "Bandcamp",
    icon: "fa-brands:bandcamp",
    url: links.bandcamp,
  },
];
---

<dialog id="playDialog" class="w-full rounded-xl shadow-2xl bg-bg">
  <div
    class="w-full bg-bg text-white p-8 font-display flex flex-col gap-8 rounded-xl"
  >
    <div class="flex items-center justify-between">
      <span class="text-xl font-black">Play on your platform</span>
      <span id="closePlayDialog" class="text-xl hover:cursor-pointer"
        ><Icon name="fa6-solid:x" /></span
      >
    </div>

    <div class="grid grid-cols-2 gap-4 px-4">
      {
        musicPlatforms.map((platforms) => (
          <a href={platforms.url} target="_blank">
            <div class="flex items-center gap-2 justify-center rounded-xl flex-col px-4 py-2 bg-black w-38 h-28">
              <span class="text-5xl text-blue">
                <Icon name={platforms.icon} />
              </span>

              <span class="text-center text-xs">{platforms.platform}</span>
            </div>
          </a>
        ))
      }
    </div>
  </div>
</dialog>

<style>
  #playDialog::backdrop {
    @apply bg-bg/20 backdrop-blur-lg;
  }
</style>

<script>
  // Dialog
  const playBtn = document.getElementById("playBtn");
  const playDialog = document.getElementById("playDialog") as HTMLDialogElement;

  const closePlayDialog = document.getElementById("closePlayDialog");

  playBtn?.addEventListener("click", () => {
    playDialog.showModal();
  });
  closePlayDialog?.addEventListener("click", () => {
    playDialog.close();
  });

  playDialog.addEventListener("click", (event) => {
    if (event.target === playDialog) {
      playDialog.close();
    }
  });

  let dialogOpen = false;

  if (dialogOpen) {
    playDialog.showModal();
  } else {
    playDialog.close();
  }
</script>
